# Generated by Django 3.0.2 on 2020-01-13 19:47

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import eLearningApp.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('overview', models.TextField()),
                ('info', models.CharField(max_length=10000)),
                ('created', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 571144, tzinfo=utc))),
                ('thumbnail', models.FileField(upload_to='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_created', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_level_id', models.CharField(default='2', max_length=255)),
                ('username', models.CharField(default='', max_length=255, unique=True)),
                ('password', models.CharField(default='', max_length=20)),
                ('first_name', models.CharField(default='', max_length=255)),
                ('last_name', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(default='', max_length=255)),
                ('add1', models.TextField(default='')),
                ('add2', models.TextField(default='')),
                ('image', models.CharField(max_length=255, null=True)),
                ('django_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(max_length=1000)),
                ('created', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573810, tzinfo=utc))),
                ('updated', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573835, tzinfo=utc))),
                ('url', models.URLField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_related', to='eLearningApp.CourseUser')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(max_length=1000)),
                ('created', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573810, tzinfo=utc))),
                ('updated', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573835, tzinfo=utc))),
                ('content', models.TextField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_related', to='eLearningApp.CourseUser')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_title', models.CharField(default='', max_length=255)),
                ('role_description', models.TextField(default='')),
                ('role_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='eLearningApp.CourseUser')),
            ],
        ),
        migrations.CreateModel(
            name='RelatedCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entryName', models.CharField(max_length=50)),
                ('entryInfo', models.TextField(max_length=10000)),
                ('time', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 571870, tzinfo=utc))),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('relatedKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eLearningApp.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', eLearningApp.fields.OrderField(blank=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='eLearningApp.Course')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(max_length=1000)),
                ('created', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573810, tzinfo=utc))),
                ('updated', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573835, tzinfo=utc))),
                ('file', models.FileField(upload_to='images')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_related', to='eLearningApp.CourseUser')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(max_length=1000)),
                ('created', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573810, tzinfo=utc))),
                ('updated', models.DateTimeField(default=datetime.datetime(2020, 1, 13, 19, 47, 34, 573835, tzinfo=utc))),
                ('file', models.FileField(upload_to='files')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_related', to='eLearningApp.CourseUser')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('order', eLearningApp.fields.OrderField(blank=True)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('text', 'video', 'image', 'file')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='eLearningApp.Module')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
